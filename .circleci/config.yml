version: 2.1
jobs:
  test:
    docker:
      - image: circleci/node:8.10.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}.
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - setup_remote_docker
      - run: npm install
      - run:
          name: build run and archive image
          command: |
            PACKAGE_VERSION=$(npm view vue-cli-plugin-e2e-nightwatch-browserstack version)
            TAG=$PACKAGE_VERSION-$CIRCLE_BUILD_NUM
            docker build -t $DOCKER_USER/vue-cli-plugin-e2e-nightwatch-browserstack:$TAG .
            docker run \
              --name browserstack-plugin-testing \
              -e BROWSERSTACK_USERNAME=$BROWSERSTACK_USERNAME \
              -e BROWSERSTACK_ACCESS_KEY=$BROWSERSTACK_ACCESS_KEY \
              -e BROWSERSTACK_PROJECT=$BROWSERSTACK_PROJECT \
              $DOCKER_USER/vue-cli-plugin-e2e-nightwatch-browserstack:$TAG
            docker cp browserstack-plugin-testing:/home/node/app/hello-world/reports "$(pwd)"/reports
            echo "$DOCKER_PASS" | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_USER/vue-cli-plugin-e2e-nightwatch-browserstack:$TAG
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - persist_to_workspace:
          root: ~/repo
          paths: [.]
  deploy:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish
workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test:
          filters: # required since `deploy` has tag filters AND requires `test`
            tags:
              only: /.*/
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
